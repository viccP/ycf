<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop     
						  http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
						  http://www.springframework.org/schema/beans 
					      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
					      http://www.springframework.org/schema/tx 
						  http://www.springframework.org/schema/tx/spring-tx.xsd 
						  http://www.springframework.org/schema/cache 
                          http://www.springframework.org/schema/cache/spring-cache-4.3.xsd  
					      http://www.springframework.org/schema/context 
					      http://www.springframework.org/schema/context/spring-context.xsd 
					      http://www.springframework.org/schema/mvc 
					      http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
					      http://www.springframework.org/schema/task  
                          http://www.springframework.org/schema/task/spring-task-4.3.xsd">
	<!-- 数据库配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:email.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Configure Spring's transaction manager to use a DataSource -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Configure jOOQ's ConnectionProvider to use Spring's TransactionAwareDataSourceProxy, 
		which can dynamically discover the transaction context -->
	<bean id="transactionAwareDataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean class="org.jooq.impl.DataSourceConnectionProvider" name="connectionProvider">
		<constructor-arg ref="transactionAwareDataSource" />
	</bean>

	<!-- Configure the DSL object, optionally overriding jOOQ Exceptions with 
		Spring Exceptions -->
	<bean id="dsl" class="org.jooq.impl.DefaultDSLContext">
		<constructor-arg ref="config" />
	</bean>

	<!-- Invoking an internal, package-private constructor for the example Implement 
		your own Configuration for more reliable behaviour -->
	<bean class="org.jooq.impl.DefaultConfiguration" name="config">
		<property name="SQLDialect">
			<value type="org.jooq.SQLDialect">MYSQL</value>
		</property>
		<property name="connectionProvider" ref="connectionProvider" />
	</bean>

	<!-- 添加事务支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
	<mvc:annotation-driven />
	<mvc:resources mapping="/resource/**" location="/,/resource/" />
	<mvc:resources mapping="/pages/**" location="/,/pages/" />

	<mvc:resources mapping="/**" location="/" />

	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="com.ycf" />

	<!-- 激活自动代理功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- 邮件service -->
	<bean id="emailService" class="com.ycf.service.EmailService">
		<property name="account" value="${mail.account}" />
		<property name="password" value="${mail.password}" />
		<property name="smtp" value="${mail.smtp}" />
		<property name="desAccount" value="${mail.desAccount}" />
		<property name="debug" value="${mail.debug}" />
		<property name="ssl">
			<map>
				<entry key="port" value="465" />
				<entry key="socketFactory" value="javax.net.ssl.SSLSocketFactory" />
				<entry key="fallback" value="false" />
			</map>
		</property>
	</bean>

	<!-- Dao配置文件 -->
	<import resource="dao.xml" />
</beans>